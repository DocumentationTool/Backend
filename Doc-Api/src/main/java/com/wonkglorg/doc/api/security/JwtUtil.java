package com.wonkglorg.doc.api.security;

import io.jsonwebtoken.Jwts;

import javax.crypto.SecretKey;
import java.util.Date;

public class JwtUtil {
	private static final SecretKey SECRET_KEY = Jwts.SIG.HS256.key().build();
	private static final long EXPIRATION_TIME = 1000 * 60 * 60L; // 1 hour

	public JwtUtil() {
		//Utility Class
	}

	/**
	 * Retrieves the id from the given token generated by {@link #generateToken(String)}
	 *
	 * @param token the token to parse
	 * @return the userid embedded
	 */
	public static String extractUsername(String token) {
		//@Formatter:off
        return Jwts.parser()
						.verifyWith(SECRET_KEY)
						.build()
						.parseSignedClaims(token)
						.getPayload()
						.getSubject();
		//@Formatter:on
	}

	/**
	 * Generates a new JWT Security token for the given user
	 *
	 * @param userId the users id
	 * @return a valid token
	 */
	public static String generateToken(String userId) {
		//@Formatter:off
        return Jwts.builder()
                .subject(userId)
                .issuedAt(new Date())
                .expiration(new Date(System.currentTimeMillis() + EXPIRATION_TIME))
                .signWith(SECRET_KEY)
                .compact();
		//@Formatter:on
	}

	/**
	 * Validates if the token is real
	 * @param token the token to validate
	 * @return
	 */
	public static boolean validateToken(String token) {
		try {
			Jwts.parser().verifyWith(SECRET_KEY).build().parseSignedClaims(token);
			return true;
		} catch (Exception e) {
			return false;
		}
	}
}

